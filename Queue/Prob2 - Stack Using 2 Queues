#include<iostream>
#include<queue>
using namespace std;


template<typename T>

class Stack{

    queue<T> q1;
    queue<T> q2;

public:
    void push(T data){

        q1.push(data);
    }

    void pop(){

        if(q1.empty()){
            return;
        }

        //pop (n-1) elements from non empty queue q1 to empty queue q2
        while(q1.size()>1){

            T element = q1.front();
            q2.push(element);
            q1.pop();
        }

        //pop 1 element from q1
        q1.pop();

        //interchange q1 and q2
        swap(q1,q2);

    }

    int top(){

        while(q1.size()>1){

            T element = q1.front();
            q2.push(element);
            q1.pop();
        }

        T element = q1.front();
        q2.push(element);
        q1.pop();

        swap(q1,q2);

        return element;
    }

    bool empty(){
        return q1.size() + q2.size() == 0;
    }

};

int main(){

    Stack<int> s;
    s.push(1);
    s.push(2);
    s.push(3);

    while(!s.empty()){

        cout<<s.top()<<" ";
        s.pop();
    }

    return 0;
}
