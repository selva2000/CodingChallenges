#include <iostream>
using namespace std;

class node{
public:
    int data;
    node*next;

    node(int d){
        data = d;
        next = NULL;

    }
};

void insertAtHead(node*&head,int d){
    if(head==NULL){
        head = new node(d);
        return;
    }

    node *n = new node(d);
    n->next = head;
    head = n;
}

int length(node*head){
    int cnt=0;
    while(head!=NULL){
        cnt++;
        head = head->next;
    }
    return cnt;
}

void insertAtTail(node*&head,int d){
    if(head==NULL){
        // head = new node(d);
        // return;
        insertAtHead(head,d);
    }

    node*tail = head;
    while(tail->next!=NULL){
        tail = tail->next;
    }
    tail->next = new node(d);
    return;
}

void insertAtMiddle(node*&head,int d,int p){
    if(head==NULL or p==0){
        insertAtHead(head,d);
    } 
    else if(p>length(head)){
        insertAtTail(head,d);
    }
    else {
        int jumps = 0;
        node*temp = head;
        while(jumps<p-1){
            temp = temp->next;
            jumps++;
        }
        node*n = new node(d);
        n->next = temp->next;
        temp->next = n;
    }

}

void print(node*head){

    while(head!=NULL){
        cout<<head->data;
        cout<<"->";
        head = head->next;
    }
}

int main() {
    node*head = NULL;
    insertAtHead(head,5);
    insertAtHead(head,2);
    insertAtHead(head,1);
    insertAtHead(head,0);
    insertAtHead(head,-1);
    insertAtMiddle(head,4,4);
    insertAtTail(head,6);
    insertAtTail(head,9);


    print(head);
    //print(head);
    
}
