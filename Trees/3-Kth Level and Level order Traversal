#include<iostream>

using namespace std;


class node{

public:
	int data;
	node* left;
	node* right;
 
	node(int d){
		data = d;
		left = NULL;
		right = NULL;
	}
};

node* buildTree(){

	int d;
	cin>>d;

	if(d==-1){
		return NULL;
	}

	node* root = new node(d);
	root->left = buildTree();
	root->right = buildTree();
	return root;
}

void print(node* root){//preorder: (N L R)

	if(root==NULL){
		return;
	}

	//print root first and followed by root sub-trees(childerens)
	cout<<root->data<<" ";
	print(root->left);
	print(root->right);

}

void print_inorder(node* root){//Inorder: (L N R)

	if(root==NULL){
		return;
	}

	print_inorder(root->left);
	cout<<root->data<<" ";
	print_inorder(root->right);
}

void print_postorder(node* root){//Post order: (L R N)

	if(root==NULL){
		return;
	}

	print_postorder(root->left);
	print_postorder(root->right);
	cout<<root->data<<" ";
	
}

int height(node* root){

	if(root==NULL){
		return 0;
	}

	int left_side = height(root->left);
	int right_side = height(root->right);
	return max(left_side, right_side) + 1;
}

void kthlevel(node* root, int k){

	if(root==NULL){
		return;
	}

	if(k==1){
		cout<<root->data<<" ";
		return;
	}

	kthlevel(root->left, k-1);
	kthlevel(root->right, k-1);
	return;
}

void allLevel(node* root){

	int H = height(root);

	for(int i=1;i<=H;i++){
		kthlevel(root,i);
		cout<<endl;
	}
	return;
}

int main(){

	node* root = buildTree();
	cout<<"Preorder Traversal: ";
	print(root);
	cout<<endl;

	cout<<"Inorder Traversal: ";
	print_inorder(root);
	cout<<endl;

	cout<<"Postorder Traversal: ";
	print_postorder(root);
	cout<<endl;

	cout<<"Height of the tree: ";
	cout<<height(root);
	cout<<endl;

	cout<<"Kth-Level: ";
	kthlevel(root,3);
	cout<<endl;

	cout<<"All levels: "<<endl;
	allLevel(root);
}
