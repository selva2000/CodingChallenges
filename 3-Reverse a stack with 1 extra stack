#include <iostream>
#include<stack>
using namespace std;

void transfer(stack<int> &s1, stack<int> &s2, int n){

    for(int i=0;i<n;i++){
        s2.push(s1.top());
        s1.pop();
    }
}

void reverseStack(stack<int> &s1){

    stack<int> s2;

    int n = s1.size();

    for(int i=0;i<n;i++){

        //store top element of s1 
        int x = s1.top();
        s1.pop();

        //transfer n-i-1 times element form s1 to s2
        transfer(s1,s2,n-i-1);

        // push stored top element to bottom of s1.
        s1.push(x);

        //tranfer element back from s2 to s1.
        transfer(s2,s1,n-i-1);

    }
}

int main(){

    stack<int> s;
    // s.push(5);
    // s.push(4);
    // s.push(3);
    // s.push(2);
    // s.push(1);

    int n;
    cin>>n;

    for(int i=0;i<n;i++){
        s.push(i);
    }

    cout<<"After reversing: "<<endl;
    reverseStack(s);
     while(!s.empty()){
        cout<<s.top()<<endl;
        s.pop();
    }

    return 0;

}
